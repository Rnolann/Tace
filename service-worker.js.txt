const CACHE_NAME = 'tace-cache-v1';
const urlsToCache = [
  './tace.html',
  './icons/icone1.png',
  './icons/icone2.png',
  './manifest.json'
  // ajoute ici d’autres fichiers comme style.css, script.js si tu en as
];

// Installer et cacher les fichiers
self.addEventListener('install', event => {
  event.waitUntil(
    caches.open(CACHE_NAME)
      .then(cache => cache.addAll(urlsToCache))
  );
});

// Répondre aux requêtes avec les fichiers en cache
self.addEventListener('fetch', event => {
  event.respondWith(
    caches.match(event.request)
      .then(response => response || fetch(event.request))
  );
});

// Nettoyer les anciens caches si besoin
self.addEventListener('activate', event => {
  const cacheWhitelist = [CACHE_NAME];
  event.waitUntil(
    caches.keys()
      .then(cacheNames =>
        Promise.all(
          cacheNames.map(cacheName => {
            if (!cacheWhitelist.includes(cacheName)) {
              return caches.delete(cacheName);
            }
          })
        )
      )
  );
});
